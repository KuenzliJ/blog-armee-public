// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  username    String
  email       String       @unique
  password    String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  role        Role         @default(USER)
  userImage   String?      @default("https://res.cloudinary.com/drgjvefuc/image/upload/v1714468084/kgevsl5piwlheei2z1vo.webp")
  provider    String?
  permissions String[]
  Comment     Comment[]
  Blog        Blog[]
  Discussion  Discussion[]
  Foto        Foto[]
}

model Comment {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  authorId     String      @db.ObjectId
  author       User?       @relation(fields: [authorId], references: [id])
  text         String
  blogId       String      @db.ObjectId
  blog         Blog?       @relation(fields: [blogId], references: [id])
  published    Boolean     @default(true)
  createdAt    DateTime    @default(now())
  Discussion   Discussion? @relation(fields: [discussionId], references: [id])
  discussionId String?     @db.ObjectId
  Foto         Foto?       @relation(fields: [fotoId], references: [id])
  fotoId       String?     @db.ObjectId
}

model Blog {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl    String?
  title       String
  description String?
  authorId    String    @db.ObjectId
  author      User?     @relation(fields: [authorId], references: [id])
  category    String
  published   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[]
}

model Discussion {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  authorId    String    @db.ObjectId
  author      User?     @relation(fields: [authorId], references: [id])
  category    String
  published   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[]
}

model Foto {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl    String
  description String
  category    String
  authorId    String    @db.ObjectId
  author      User?     @relation(fields: [authorId], references: [id])
  published   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[]
}

model Info {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  category    String
  url         String?
  published   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  EDITOR
  USER
}
